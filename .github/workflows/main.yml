# This is a basic workflow to help you get started with Actions
name: CI Validation

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Mount bazel cache
        uses: actions/cache@v1
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"


      - name: Build rel_lib
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build //rel-lib:rel_lib
      
      - name: Build rel_cli
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build //rel-cli:rel_cli

      - name: Build rel_ls
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build //rel-ls:rel_ls

      - name: Build rel_py
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build //relpy:rel_py


      # Run unittests
      - name: Run rel_lib Unittest
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //rel-lib/test/unittest:RelLibUnitTest

      - name: Run rel_ls Unittest
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //rel-ls/test/unittest:RelLsUnitTest

      - name: Run rel_cli Unittest
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //rel-cli/test/unittest:RelCliUnitTest


      # Run integration tests
      - name: Integration Test Python Integration
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //relpy/test:integration_test

      - name: Integration Test Big Project
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //relpy/test:integration_test_big

      - name: Integration Test Huge Project
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //relpy/test:integration_test_huge


      # Process models
      - name: Validate REL Requirements on Command Line
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" run //requirements:validate_rel_requirements

      - name: Create HTML Export of REL requirements
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" run //relpy/html_export:html

      - name: Validate Big Test Project on Command Line
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" run //test:validate_big_testmodel
          
      - name: Validate Huge Test Project on Command Line
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" run //test:validate_huge_testmodel
